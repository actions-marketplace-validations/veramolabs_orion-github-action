name: 'Member level'

on: [issues]

jobs:
  memberLevel: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Creating actor DID
      - id: actor
        uses: ./
        with:
          url: ${{secrets.AGENT_URL}}
          token: ${{secrets.AGENT_TOKEN}}
          method: didManagerGetOrCreate
          args: |
            { 
              "provider": "did:ethr:rinkeby",
              "alias": "github:${{github.actor}}" 
            }
      
      - run: echo ${{ fromJSON(steps.actor.outputs.result).did }}


      # Querying for issue count
      - uses: octokit/graphql-action@v2.x
        id: issues
        with:
          query: |
            query issues($name: String!, $owner: String!, $login: String!) { 
              repository(name: $name, owner: $owner) {
                issues(filterBy: {createdBy: $login}) {
                  totalCount
                }
              }
            }
          login: ${{github.actor}}
          name: ${{github.event.repository.name}}
          owner: ${{github.event.repository.owner.login}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: "echo 'Issue count: ${{ fromJSON(steps.issues.outputs.data).repository.issues.totalCount }}'"

      # Creating Member level verifiable credential
      - id: vc
        if: ${{ fromJSON(steps.issues.outputs.data).repository.issues.totalCount == 1 }}
        uses: ./
        with:
          url: ${{secrets.AGENT_URL}}
          token: ${{secrets.AGENT_TOKEN}}
          method: createVerifiableCredential
          args: |
            {
              "save": true,
              "proofFormat": "jwt",
              "credential": {
                "type": [
                  "VerifiableCredential",
                  "Member"
                ],
                "issuer": { 
                  "id": "${{ secrets.ISSUER_DID }}" 
                },
                "credentialSubject": {
                  "id": "${{ fromJSON(steps.actor.outputs.result).did }}",
                  "level": "1"
                }
              }
            }

      - run: mkdir -p ./artifacts
      - run: echo ${{ toJSON(steps.vc.outputs.result) }} > ./artifacts/credential.txt

      - uses: actions/upload-artifact@v2
        id: upload
        with:
          name: memberLevelCredential
          path: ./artifacts/credential.txt

      # Add comment
      - uses: octokit/graphql-action@v2.x
        id: comment
        with:
          query: |
            mutation AddComment($subject: String!, $body: String!) {
              addComment(input: {subjectId: $subject, body: $body}) {
                clientMutationId
              }
            }
          subject: ${{github.event.issue.node_id}}
          body: '\@${{github.actor}} this is your first issue. You have reached **Member level: 1**\n\n<details><summary>Verifiable credential</summary><p>${{toJSON(steps.vc.outputs.result)}}</p></details>'
            

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}